# ============================================================================
# Dockerfile for NL2SQL Multi-Model Streamlit Application
# ============================================================================
# This Dockerfile builds a production-ready container for the multi-model
# NL2SQL application optimized for Azure Container Apps deployment.
# ============================================================================

# Use official Python 3.13 slim image (matches your dev environment)
FROM python:3.13-slim-bookworm

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH="/app" \
    DEBIAN_FRONTEND=noninteractive

# Set work directory
WORKDIR /app

# ============================================================================
# Install system dependencies and Microsoft ODBC Driver for SQL Server
# ============================================================================
RUN apt-get update && apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        gnupg \
        apt-transport-https \
        unixodbc \
        unixodbc-dev \
    # Add Microsoft repository
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor -o /etc/apt/keyrings/microsoft.gpg \
    && echo "deb [arch=amd64,arm64 signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/debian/12/prod bookworm main" > /etc/apt/sources.list.d/microsoft-prod.list \
    && apt-get update \
    # Install ODBC Driver 18 for SQL Server
    && ACCEPT_EULA=Y apt-get install -y --no-install-recommends msodbcsql18 \
    # Clean up to reduce image size
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# ============================================================================
# Copy project files
# ============================================================================
# Copy requirements first for better Docker layer caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --upgrade pip --no-cache-dir \
    && pip install --no-cache-dir -r requirements.txt

# Copy the entire project
COPY . .

# ============================================================================
# Create necessary directories
# ============================================================================
RUN mkdir -p /app/RESULTS \
    && mkdir -p /app/DATABASE_SETUP \
    && chmod -R 755 /app/RESULTS

# ============================================================================
# Health check configuration
# ============================================================================
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# ============================================================================
# Expose Streamlit default port
# ============================================================================
EXPOSE 8501

# ============================================================================
# Set working directory to Streamlit app location
# ============================================================================
WORKDIR /app/ui/streamlit_app

# ============================================================================
# Run the multi-model Streamlit application
# ============================================================================
# Use exec form for proper signal handling
CMD ["streamlit", "run", "app_multimodel.py", \
     "--server.port=8501", \
     "--server.address=0.0.0.0", \
     "--server.enableCORS=false", \
     "--server.enableXsrfProtection=true", \
     "--server.maxUploadSize=10"]
